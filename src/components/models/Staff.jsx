// // /*
// // Auto-generated by: https://github.com/pmndrs/gltfjsx
// // */
// // "use client"
// // import React, { useRef } from 'react'
// // import { useGLTF } from '@react-three/drei'

// // export default function Staff(props) {
// //   const { nodes, materials } = useGLTF('/models/staff-transformed.glb')
// //   return (
// //     <group {...props} dispose={null}>
// //       <mesh
// //         castShadow
// //         receiveShadow
// //         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0.geometry}
// //         material={materials.Wizard_Staff3}
// //         position={[-0.041, 0.983, 0.768]}
// //         rotation={[0, Math.PI / 2, 0]}
// //         scale={0.04}
// //       />
// //       <mesh
// //         castShadow
// //         receiveShadow
// //         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_1.geometry}
// //         material={materials.Wizard_Staff3}
// //         position={[-0.041, 0.983, 0.768]}
// //         rotation={[0, Math.PI / 2, 0]}
// //         scale={0.04}
// //       />
// //       <mesh
// //         castShadow
// //         receiveShadow
// //         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_2.geometry}
// //         material={materials.Wizard_Staff3}
// //         position={[-0.041, 0.983, 0.768]}
// //         rotation={[0, Math.PI / 2, 0]}
// //         scale={0.04}
// //       />
// //       <mesh
// //         castShadow
// //         receiveShadow
// //         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_3.geometry}
// //         material={materials.Wizard_Staff3}
// //         position={[-0.041, 0.983, 0.768]}
// //         rotation={[0, Math.PI / 2, 0]}
// //         scale={0.04}
// //       />
// //       <mesh
// //         castShadow
// //         receiveShadow
// //         geometry={nodes.Wizard_Staff2_Wizard_Staff2_0.geometry}
// //         material={materials.Wizard_Staff2}
// //         position={[-0.041, 0.983, 0.768]}
// //         rotation={[0, Math.PI / 2, 0]}
// //         scale={0.04}
// //       />
// //     </group>
// //   )
// // }

// // useGLTF.preload('/models/staff-transformed.glb')

// "use client";
// import React, { useRef } from 'react';
// import { useGLTF } from '@react-three/drei';
// import * as THREE from 'three';
// import { useFrame } from '@react-three/fiber';
// export default function Staff(props) {
//   const { nodes, materials } = useGLTF('/models/staff-transformed.glb');
//   const modelRef  = useRef();
//   useFrame(() =>{
//     modelRef.current.rotation.y += 0.01;
// useRef
//   })

//   // Define refined golden and pearlescent colors
//   const colors = {
//     base: new THREE.Color(0xd4af37), // Light gold base color
//     highlight: new THREE.Color(0xf5f5f5), // Soft white for highlights
//     glow: new THREE.Color(0xffffff), // White glow for a pearlescent effect
//   };

//   // Update materials with golden and pearlescent theme
//   materials.Wizard_Staff3.color = colors.base;
//   materials.Wizard_Staff3.emissive = colors.glow;
//   materials.Wizard_Staff3.emissiveIntensity = 0.6; // Increase intensity for a shiny effect

//   materials.Wizard_Staff2.color = colors.highlight;
//   materials.Wizard_Staff2.emissive = colors.glow;
//   materials.Wizard_Staff2.emissiveIntensity = 0.6; // Increase intensity for a shiny effect

//   // Optionally, you could add a pearl-like sphere on top if the model allows
//   // (Uncomment if applicable)
//   /*
//   <mesh
//     castShadow
//     receiveShadow
//     geometry={new THREE.SphereGeometry(0.05, 32, 32)} // Adjust size and segments as needed
//     material={new THREE.MeshStandardMaterial({
//       color: colors.highlight,
//       emissive: colors.glow,
//       emissiveIntensity: 0.8,
//       roughness: 0.2,
//       metalness: 0.8
//     })}
//     position={[0, 1.2, 0]} // Adjust position on top
//   />
//   */

//   return (
//     <group {...props} dispose={null}
//         scale={[3,3,3]}
//         position={[0,-2 ,0]}
//         ref={modelRef}
        
//         >
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_1.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_2.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_3.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff2_Wizard_Staff2_0.geometry}
//         material={materials.Wizard_Staff2}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//     </group>
//   );
// }

// useGLTF.preload('/models/staff-transformed.glb');
"use client"; // Client-side component

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';

export default function Staff(props) {                            
  const { nodes, materials } = useGLTF('/models/staff-transformed.glb');
  const modelRef = useRef();

  // Slow down the rotation speed
  useFrame(() => {
    if (modelRef.current) {
      modelRef.current.rotation.y += 0.005; // Slower rotation for staff
    }
  });

  const ambientLight = new THREE.AmbientLight(0x404040, 2); // Soft ambient light
  const pointLight = new THREE.PointLight(0xffffff, 2, 100); // Point light with more intensity
  pointLight.position.set(5, 10, 10);

  const spotlight = new THREE.SpotLight(0xffffff, 2);
  spotlight.position.set(0, 5, 10);
  spotlight.castShadow = true;

  // Colors and theme adjustment
  const colors = {
    base: new THREE.Color(0x663399), // Deep cosmic violet
    highlight: new THREE.Color(0xf5b8ff), // Pastel pink highlights
    glow: new THREE.Color(0xa3e0ff), // Nebula-like blue glow
  };

  materials.Wizard_Staff3.color = colors.base;
  materials.Wizard_Staff3.emissive = colors.glow;
  materials.Wizard_Staff3.emissiveIntensity = 1.1;

  materials.Wizard_Staff2.color = colors.base;
  materials.Wizard_Staff2.emissive = colors.glow;
  materials.Wizard_Staff2.emissiveIntensity = 1.1;

  return (
    <group {...props} dispose={null} scale={[2.5, 2.5, 2.5]} position={[0, -1.5, 0]} ref={modelRef}>
      <primitive object={ambientLight} />
      <primitive object={pointLight} />
      <primitive object={spotlight} />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Wizard_Staff3_Wizard_Staff3_0.geometry}
        material={materials.Wizard_Staff3}
        position={[-0.041, 0.983, 0.768]}
        rotation={[0, Math.PI / 2, 0]}
        scale={0.05}
      />
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_1.geometry}
        material={materials.Wizard_Staff3}
        position={[-0.041, 0.983, 0.768]}
        rotation={[0, Math.PI / 2, 0]}
        scale={0.05}
      />
    </group>
  );
}

useGLTF.preload('/models/staff-transformed.glb');
